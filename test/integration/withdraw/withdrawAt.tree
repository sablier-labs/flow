withdrawAt.t.sol
├── when delegate called
│  └── it should revert
└── when not delegate called
   ├── given the id references a null stream
   │  └── it should revert
   └── given the id does not reference a null stream
      ├── given the id references a canceled stream
      │  └── it should revert
      └── given the id does not reference a canceled stream
         ├── when the provided address is zero
         │  └── it should revert
         └── when the provided address is not zero
            ├── when the withdrawal address is not the stream recipient
            │  ├── when the caller is the sender
            │  │  └── it should revert
            │  └── when the caller is unknown
            │     └── it should revert
            └── when the withdrawal address is the stream recipient
               ├── when the withdrawal time is not strictly greater than last time update
               │  └── it should revert
               └── when the withdrawal time is strictly greater than last time update
                  ├── when the withdrawal time is in the future
                  │  └── it should revert
                  └── when the withdrawal time is not in the future
                     ├── given the balance is zero
                     │  └── it should revert
                     └── given the balance is not zero
                        ├── when the caller is not the recipient
                        │  ├── when the caller is the sender
                        │  │  └── it should make the withdrawal
                        │  └── when the caller is unknown
                        │     └── it should make the withdrawal
                        └── when the caller is the recipient
                              ├── given the asset does not have 18 decimals
                              │  ├── it should make the withdrawal
                              │  ├── it should update the time
                              │  ├── it should update the stream balance
                              │  ├── it should perform the ERC-20 transfer
                              │  └── it should emit a {Transfer} and {WithdrawFromOpenEndedStream} event
                              └── given the asset has 18 decimals
                                 ├── it should make the withdrawal   
                                 ├── it should update the time
                                 ├── it should update the stream balance
                                 ├── it should perform the ERC-20 transfer
                                 └── it should emit a {Transfer} and {WithdrawFromOpenEndedStream} event