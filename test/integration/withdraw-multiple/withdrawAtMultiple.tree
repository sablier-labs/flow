withdrawAtMultiple.t.sol
├── when delegate called
│  └── it should revert
└── when not delegate called
   ├── when the input array counts are not equal
   │  └── it should revert
   └── when the input array counts are equal
      ├── when the array counts are zero
      │  └── it should do nothing
      └── when the array counts are not zero
         ├── given the stream IDs array references only null streams
         │  └── it should revert
         ├── given the stream IDs array references some null streams
         │  └── it should revert
         └── given the stream IDs array references only non-null streams
            ├── given the stream IDs array references only canceled streams
            │  └── it should revert
            ├── given the stream IDs array references some canceled streams
            │  └── it should revert
            └── given the stream IDs array references only non-canceled streams
               ├── when all withdrawal times are not strictly greater than the last time update
               │  └── it should revert
               ├── when some withdrawal times are not strictly greater than the last time update
               │  └── it should revert
               └── when none withdrawal times are strictly greater than the last time update
                  ├── when all withdrawal times are in the future
                  │  └── it should revert
                  ├── when some withdrawal times are in the future
                  │  └── it should revert
                  └── when none withdrawal times are in the future
                     ├── given all balances are zero
                     │  └── it should revert
                     ├── given some balances are zero
                     │  └── it should revert
                     └── given all balances are greater than zero
                        ├── it should make the withdrawals
                        ├── it should update the times
                        └── it should emit multiple {WithdrawFromOpenEndedStream} events