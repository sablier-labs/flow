{
  "name": "@sablier/flow",
  "description": "Flow smart contracts of the Sablier token distribution protocol",
  "license": "BUSL-1.1",
  "version": "1.1.0",
  "author": {
    "name": "Sablier Labs Ltd",
    "url": "https://sablier.com"
  },
  "bugs": {
    "url": "https://github.com/sablier-labs/flow/issues"
  },
  "dependencies": {
    "@nomiclabs/hardhat-ethers": "^2.2.3",
    "@openzeppelin/contracts": "5.0.2",
    "@prb/math": "4.1.0",
    "@types/node": "^22.10.1",
    "dotenv": "^16.4.7",
    "ethers": "^5.7.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2"
  },
  "devDependencies": {
    "@nomicfoundation/hardhat-ethers": "^3.0.7",
    "@nomicfoundation/hardhat-ignition": "^0.15.5",
    "@nomicfoundation/hardhat-ignition-ethers": "^0.15.5",
    "@nomicfoundation/hardhat-verify": "^2.0.9",
    "@nomiclabs/hardhat-etherscan": "^3.1.8",
    "hardhat": "^2.22.17",
    "prettier": "^3.3.2",
    "solhint": "^5.0.1"
  },
  "files": [
    "artifacts",
    "precompiles",
    "src",
    "tests/utils",
    "LICENSE-GPL.md"
  ],
  "keywords": [
    "asset-distribution",
    "asset-streaming",
    "blockchain",
    "crypto",
    "cryptoasset-streaming",
    "cryptotoken-streaming",
    "ethereum",
    "forge",
    "foundry",
    "money-streaming",
    "real-time-finance",
    "payroll",
    "sablier",
    "smart-contracts",
    "solidity",
    "token-distribution",
    "token-streaming",
    "web3"
  ],
  "peerDependencies": {
    "@prb/math": "4.1.x"
  },
  "publishConfig": {
    "access": "public"
  },
  "scripts": {
    "benchmark": "bun run build:optimized && FOUNDRY_PROFILE=benchmark forge test --mt testGas && bun run prettier:write",
    "build": "forge build",
    "build:optimized": "FOUNDRY_PROFILE=optimized forge build",
    "clean": "rm -rf artifacts broadcast cache docs out out-optimized out-svg",
    "lint": "bun run lint:sol && bun run prettier:check",
    "lint:fix": "bun run lint:sol:fix && forge fmt",
    "lint:sol": "forge fmt --check && bun solhint \"{benchmark,precompiles,script,src,tests}/**/*.sol\"",
    "lint:sol:fix": "bun solhint \"{benchmark,precompiles,script,src,tests}/**/*.sol\" --fix --noPrompt",
    "prepack": "bun install && bash ./shell/prepare-artifacts.sh",
    "prettier:check": "prettier --check \"**/*.{json,md,svg,yml}\"",
    "prettier:write": "prettier --write \"**/*.{json,md,svg,yml}\"",
    "test": "forge test",
    "test:lite": "FOUNDRY_PROFILE=lite forge test --nmt \"testFork\"",
    "test:optimized": "bun run build:optimized && FOUNDRY_PROFILE=test-optimized forge test"
  }
}
