[profile.default]
  auto_detect_solc = false
  bytecode_hash = "none"
  evm_version = "shanghai"
  fs_permissions = [
    { access = "read", path = "./out-optimized" },
    { access = "read", path = "package.json" },
    { access = "read-write", path = "./benchmark/results"}
  ]
  gas_limit = 9223372036854775807
  gas_reports = ["SablierFlow"]
  optimizer = true
  optimizer_runs = 1000
  out = "out"
  script = "script"
  sender = "0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38"
  solc = "0.8.26"
  src = "src"
  test = "test"

[profile.default.fuzz]
  max_test_rejects = 1_000_000 # Number of times `vm.assume` can fail
  runs = 50000
  show_logs = true     # Display console logs

[profile.default.invariant]
  call_override = false # Override unsafe external calls to perform reentrancy checks
  dictionary_weight = 50
  depth = 100           # Number of calls executed in one run
  fail_on_revert = true
  runs = 5000
  shrink_run_limit = 0 # Disable shrinking of a failed sequence

# Run only the code inside benchmark directory
[profile.benchmark]
  test = "benchmark"

# Speed up compilation and tests during development
[profile.lite]
  optimizer = false

[profile.lite.invariant]
  depth = 50
  runs = 50

[profile.lite.fuzz]
  runs = 200

# Compile only the production code and the test mocks with via IR and 10,000 optimizer runs
[profile.optimized]
  optimizer = true
  optimizer_runs = 10_000
  out = "out-optimized"
  test = "test/mocks"
  via_ir = true

# Test the optimized contracts without re-compiling them
[profile.test-optimized]
  src = "test"

[doc]
  ignore = ["**/*.t.sol"]
  out = "docs"
  repository = "https://github.com/sablier-labs/flow"

[fmt]
  bracket_spacing = true
  int_types = "long"
  line_length = 120
  multiline_func_header = "all"
  number_underscore = "thousands"
  quote_style = "double"
  tab_width = 4
  wrap_comments = true

[rpc_endpoints]
  arbitrum = "${ARBITRUM_RPC_URL}"
  arbitrum_sepolia = "https://arbitrum-sepolia.blockpi.network/v1/rpc/public"
  avalanche = "${AVALANCHE_RPC_URL}"
  base = "https://mainnet.base.org"
  base_sepolia = "https://sepolia.base.org"
  bnb = "https://bsc-dataseed.binance.org"
  gnosis = "https://rpc.gnosischain.com"
  localhost = "http://localhost:8545"
  mainnet = "${MAINNET_RPC_URL}"
  optimism = "${OPTIMISM_RPC_URL}"
  optimism_sepolia = "https://sepolia.optimism.io"
  polygon = "${POLYGON_RPC_URL}"
  scroll = "https://rpc.scroll.io/"
  sepolia = "${SEPOLIA_RPC_URL}"
